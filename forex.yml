version: '3.7'
services:

    zookeeper:
        build: 
            context: kafka
            dockerfile: Dockerfile
        container_name: kafkaZK
        environment:
            - KAFKA_ACTION=start-zk
        networks: 
            tap:
                ipv4_address: 10.0.100.22


    kafkaserver:
        build: 
            context: kafka
            dockerfile: Dockerfile
        container_name: kafkaServer
        environment:
            - KAFKA_ACTION=start-kafka
        ports:
            - 9092:9092
        networks: 
            tap:
                ipv4_address: 10.0.100.23
        depends_on:
            - zookeeper


    kafkatopic:
        build: 
            context: kafka
            dockerfile: Dockerfile
        container_name: kafkaTopic
        environment:
            - KAFKA_ACTION=create-topic
            - KAFKA_PARTITION=1
            - KAFKA_TOPIC=eurusd
        networks: 
            tap:
        depends_on:
            - zookeeper
            - kafkaserver



    logstash:
        build: 
            context: logstash
            dockerfile: Dockerfile
        container_name: logstash
        networks: 
            - tap
        environment:
            XPACK_MONITORING_ENABLED: "false"
        ports:
            - 9090:9090
        volumes:
            - ./logstash/logstash_forex.conf:/usr/share/logstash/pipeline/logstash.conf
        depends_on:
            kafkatopic:
                condition: service_completed_successfully


    spark:
        build: 
            context: spark
            dockerfile: Dockerfile
        container_name: spark
        ports:
            - 4040:4040
        networks:
          - tap
        restart: on-failure  
        depends_on:
          - zookeeper
          - kafkaserver
          - logstash
        deploy:
          resources:
            limits:
              cpus: '4.0'
              memory: 4g

    
    elasticsearch:
        container_name: elasticsearch
        hostname: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
        ports:
            - "9200:9200"
            - "9300:9300"      
        environment:
            - node.name=elasticsearch
            - xpack.security.enabled=false
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - cluster.routing.allocation.disk.threshold_enabled=false
        privileged: true
        ulimits:
            memlock:
                soft: -1
                hard: -1
        networks: 
            tap:
                ipv4_address: 10.0.100.51


    kibana:
        build: 
            context: kibana
            dockerfile: Dockerfile
        container_name: kibana
        hostname: kibana
        ports:
            - "5601:5601"
        depends_on: 
            - elasticsearch
        networks: 
            tap:
                ipv4_address: 10.0.100.52



networks:
    tap:
        name: tap
        driver: bridge
        ipam:
            config:
                - subnet: 10.0.100.1/24
